apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

String version_name = '1.0.18'

android {
    compileSdkVersion 30
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "version"
}

dependencies {
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'

    // Rx
    implementation 'io.reactivex.rxjava3:rxjava:3.0.4'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-rx3:1.4.3'

    testImplementation 'junit:junit:4.12'
}

publishing {
    publications {
        versionDebug(MavenPublication) {
            groupId 'ru.egslava'
            artifactId 'MaskedEditText'
            version "$version_name-version-debug"
            artifact "$buildDir/outputs/aar/MaskedEditText-debug.aar"

            includeDependenciesInPomXml(pom)
        }
        versionRelease(MavenPublication) {
            groupId 'ru.egslava'
            artifactId 'MaskedEditText'
            version "$version_name-version-release"
            artifact "$buildDir/outputs/aar/MaskedEditText-release.aar"

            includeDependenciesInPomXml(pom)
        }
    }
}

private void includeDependenciesInPomXml(pom) {
    pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')
        configurations.compile.allDependencies.each { dependency ->
            def dependencyNode = dependenciesNode.appendNode('dependency')
            dependencyNode.appendNode('groupId', dependency.group)
            dependencyNode.appendNode('artifactId', dependency.name)
            dependencyNode.appendNode('version', dependency.version)
        }
    }
}
